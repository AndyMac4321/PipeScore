{"version":3,"sources":["Stave.js"],"names":["Stave","render","stave","props","staveHeight","y","staveLines","Array","keys","map","idx","lineHeightOf","barWidth","width","bars","length","getX","barIdx","x","previousBar","previousStave","updateBar","bar","index","updateStave","barProps","svg","for","Bar","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQC,KAAR,EAAkB;AACxB,QAAMC,WAAW,GAAGD,KAAK,CAACE,CAA1B;;AAEA,QAAMC,UAAU,GAAG,mBAAIC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAJ,EAAqBC,GAArB,CAAyB,UAAAC,GAAG;AAAA,aAAIC,YAAY,CAACD,GAAD,CAAZ,GAAoBN,WAAxB;AAAA,KAA5B,CAAnB;;AAEA,QAAMQ,QAAQ,GAAGT,KAAK,CAACU,KAAN,GAAcX,KAAK,CAACY,IAAN,CAAWC,MAA1C;;AAEA,QAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,MAAM;AAAA,aAAIA,MAAM,GAAGL,QAAT,GAAoBT,KAAK,CAACe,CAA9B;AAAA,KAAnB;;AAEA,QAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAF,MAAM;AAAA,aAAIA,MAAM,KAAK,CAAX,GACzBd,KAAK,CAACiB,aAAN,GAAsBjB,KAAK,CAACiB,aAAN,CAAoBN,IAApB,CAAyBX,KAAK,CAACiB,aAAN,CAAoBN,IAApB,CAAyBC,MAAzB,GAAkC,CAA3D,CAAtB,GAAsF,IAD7D,GAE1Bb,KAAK,CAACY,IAAN,CAAWG,MAAM,GAAG,CAApB,CAFsB;AAAA,KAA1B;;AAIA,QAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAChCrB,MAAAA,KAAK,CAACY,IAAN,CAAWS,KAAX,IAAoBD,GAApB;AACAnB,MAAAA,KAAK,CAACqB,WAAN,CAAkBtB,KAAlB;AACD,KAHD;;AAKA,QAAMuB,QAAQ,GAAG,SAAXA,QAAW,CAACH,GAAD,EAAMC,KAAN;AAAA,aAAiB;AAChCL,QAAAA,CAAC,EAAEF,IAAI,CAACO,KAAD,CADyB;AAEhClB,QAAAA,CAAC,EAAED,WAF6B;AAGhCS,QAAAA,KAAK,EAAED,QAHyB;AAIhCO,QAAAA,WAAW,EAAEA,WAAW,CAACI,KAAD,CAJQ;AAKhCF,QAAAA,SAAS,EAATA;AALgC,OAAjB;AAAA,KAAjB;;AAQA,WAAOK,GAAP,oBAGQxB,KAAK,CAACY,IAAN,CAAWL,GAAX,CACA,UAACa,GAAD,EAAKZ,GAAL;AAAA,aAAagB,GAAG,CAACC,GAAJ,CAAQL,GAAR,CAAb,qBAA4BM,GAAG,CAAC3B,MAAJ,CAAWqB,GAAX,EAAgBG,QAAQ,CAACH,GAAD,EAAKZ,GAAL,CAAxB,CAA5B;AAAA,KADA,CAHR,EAQQJ,UAAU,CAACG,GAAX,CACA,UAAAJ,CAAC;AAAA,aAAIqB,GAAJ,qBAAmBvB,KAAK,CAACe,CAAzB,EAAiCf,KAAK,CAACe,CAAN,GAAUf,KAAK,CAACU,KAAjD,EAA6DR,CAA7D,EAAqEA,CAArE;AAAA,KADD,CARR;AAcD,GAzCW;AA0CZwB,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXf,MAAAA,IAAI,EAAE,CAACc,GAAG,CAACC,IAAJ,EAAD,EAAYD,GAAG,CAACC,IAAJ,EAAZ,EAAuBD,GAAG,CAACC,IAAJ,EAAvB,EAAkCD,GAAG,CAACC,IAAJ,EAAlC;AADK,KAAP;AAAA;AA1CM,CAAd","file":"Stave.a2bbe972.js","sourceRoot":"..","sourcesContent":["\nconst Stave = {\n  render: (stave, props) => {\n    const staveHeight = props.y;\n    \n    const staveLines = [...Array(5).keys()].map(idx => lineHeightOf(idx) + staveHeight);\n\n    const barWidth = props.width / stave.bars.length;\n\n    const getX = barIdx => barIdx * barWidth + props.x;\n\n    const previousBar = barIdx => barIdx === 0\n      ? (props.previousStave ? props.previousStave.bars[props.previousStave.bars.length - 1] : null)\n      : stave.bars[barIdx - 1];\n\n    const updateBar = (bar, index) => {\n      stave.bars[index] = bar;\n      props.updateStave(stave);\n    }\n\n    const barProps = (bar, index) => ({\n      x: getX(index),\n      y: staveHeight,\n      width: barWidth,\n      previousBar: previousBar(index),\n      updateBar\n    });\n\n    return svg`\n      <g class=\"stave\">\n        <g class=\"notes\">\n          ${stave.bars.map(\n            (bar,idx) => svg.for(bar)`${Bar.render(bar, barProps(bar,idx))}`\n          )}\n        </g>\n        <g class=\"stave-lines\">\n          ${staveLines.map(\n            y => svg`<line x1=${props.x} x2=${props.x + props.width} y1=${y} y2=${y} stroke=\"black\" />`\n          )}\n        </g>\n      </g>\n    `\n  },\n  init: () => ({\n    bars: [Bar.init(),Bar.init(),Bar.init(),Bar.init()]\n  })\n}"]}