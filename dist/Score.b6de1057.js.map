{"version":3,"sources":["Score.js"],"names":["Score","render","score","props","width","height","margin","staveGap","topOffset","updateStave","stave","index","staves","updateScore","staveProps","x","y","previousStave","svg","map","idx","for","Stave","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQC,KAAR,EAAkB;AACxB,QAAMC,KAAK,GAAG,MAAM,CAApB;AACA,QAAMC,MAAM,GAAG,MAAM,CAArB;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,QAAQ,GAAG,GAAjB;AACA,QAAMC,SAAS,GAAG,GAAlB;;AACA,QAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACpCT,MAAAA,KAAK,CAACU,MAAN,CAAaD,KAAb,IAAsBD,KAAtB;AACAP,MAAAA,KAAK,CAACU,WAAN,CAAkBX,KAAlB;AACD,KAHD;;AAKA,QAAMY,UAAU,GAAG,SAAbA,UAAa,CAACJ,KAAD,EAAQC,KAAR;AAAA,aAAmB;AACpCI,QAAAA,CAAC,EAAET,MADiC;AAEpCU,QAAAA,CAAC,EAAEL,KAAK,GAAGJ,QAAR,GAAmBC,SAFc;AAGpCJ,QAAAA,KAAK,EAAEA,KAAK,GAAG,IAAIE,MAHiB;AAIpC;AACAW,QAAAA,aAAa,EAAEf,KAAK,CAACU,MAAN,CAAaD,KAAK,GAAG,CAArB,KAA2B,IALN;AAMpCF,QAAAA,WAAW,EAAXA;AANoC,OAAnB;AAAA,KAAnB;;AASA,WAAOS,GAAP,oBAAwBd,KAAxB,EAAwCC,MAAxC,EAGIH,KAAK,CAACU,MAAN,CAAaO,GAAb,CAAiB,UAACT,KAAD,EAAOU,GAAP;AAAA,aAAeF,GAAG,CAACG,GAAJ,CAAQX,KAAR,CAAf,qBACfY,KAAK,CAACrB,MAAN,CAAaS,KAAb,EAAoBI,UAAU,CAACJ,KAAD,EAAOU,GAAP,CAA9B,CADe;AAAA,KAAjB,CAHJ;AAOD,GA5BW;AA+BZG,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXX,MAAAA,MAAM,EAAE,CAACU,KAAK,CAACC,IAAN,EAAD,EAAcD,KAAK,CAACC,IAAN,EAAd;AADG,KAAP;AAAA;AA/BM,CAAd","file":"Score.b6de1057.js","sourceRoot":"..","sourcesContent":["const Score = {\n  render: (score, props) => {\n    const width = 210 * 5;\n    const height = 297 * 5;\n    const margin = 30;\n    const staveGap = 100;\n    const topOffset = 150;\n    const updateStave = (stave, index) => {\n      score.staves[index] = stave;\n      props.updateScore(score);\n    }\n    \n    const staveProps = (stave, index) => ({\n      x: margin,\n      y: index * staveGap + topOffset,\n      width: width - 2 * margin,\n      // || null so it is not 'undefined' but 'null'\n      previousStave: score.staves[index - 1] || null,\n      updateStave\n    });\n  \n    return svg`<svg width=${width} height=${height}>\n      <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\" />\n  \n      ${score.staves.map((stave,idx) => svg.for(stave)`\n        ${Stave.render(stave, staveProps(stave,idx))}\n      `)}\n    </svg>`;\n  },\n  \n  \n  init: () => ({\n    staves: [Stave.init(),Stave.init()]\n  })\n}\n"]}