{"version":3,"sources":["Bar.js"],"names":["Bar","dragBoxes","x","y","width","mouseDrag","height","lineGap","svg","noteHeights","entries","map","note","boxY","render","bar","props","staveY","previousWholeNote","previousBar","notes","length","previousNote","Note","lastNoteOfWholeNote","previousNoteOf","noteIndex","beats","reduce","nums","n","totalBeatWidth","totalNumberOfBeats","beatWidth","getX","updateNote","index","updateBar","noteProps","noteWidth","idx","for","lineHeightOf","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,GAAG,GAAG;AACVC,EAAAA,SAAS,EAAE,mBAACC,CAAD,EAAGC,CAAH,EAAKC,KAAL,EAAWC,SAAX,EAAyB;AAClC;AACA,QAAMC,MAAM,GAAGC,OAAO,GAAG,CAAzB;AAEA,WAAOC,GAAP,oBAEYN,CAFZ,EAEmBC,CAAC,GAAG,IAAII,OAF3B,EAE4CH,KAF5C,EAE4DG,OAAO,GAAG,CAFtE,EAEuF;AAAA,aAAMF,SAAS,CAAC,IAAD,CAAf;AAAA,KAFvF,EAGYH,CAHZ,EAGmBC,CAAC,GAAG,MAAMI,OAH7B,EAG8CH,KAH9C,EAG8DG,OAAO,GAAG,CAHxE,EAGyF;AAAA,aAAMF,SAAS,CAAC,GAAD,CAAf;AAAA,KAHzF,EAKI,mBAAII,WAAW,CAACC,OAAZ,EAAJ,EAA2BC,GAA3B,CAA+B;AAAA;AAAA,UAAEC,IAAF;AAAA,UAAOC,IAAP;;AAAA,aAC/BL,GAD+B,qBAEzBN,CAFyB,EAGzBC,CAAC,GAAGI,OAAO,GAAGM,IAAd,GAAqBN,OAAO,GAAG,CAHN,EAIrBH,KAJqB,EAKpBE,MALoB,EAMf;AAAA,eAAMD,SAAS,CAACO,IAAD,CAAf;AAAA,OANe;AAAA,KAA/B,CALJ;AAeD,GApBS;AAqBVE,EAAAA,MAAM,EAAE,gBAACC,GAAD,EAAKC,KAAL,EAAe;AACrB,QAAMC,MAAM,GAAGD,KAAK,CAACb,CAArB;AAGA,QAAMe,iBAAiB,GAAGF,KAAK,CAACG,WAAN,GAAoBH,KAAK,CAACG,WAAN,CAAkBC,KAAlB,CAAwBJ,KAAK,CAACG,WAAN,CAAkBC,KAAlB,CAAwBC,MAAxB,GAAiC,CAAzD,CAApB,GAAkF,IAA5G;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,mBAAL,CAAyBN,iBAAzB,CAArB;;AACA,QAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,SAAS;AAAA,aAAIA,SAAS,KAAK,CAAd,GAChCJ,YADgC,GAEhCP,GAAG,CAACK,KAAJ,CAAUM,SAAS,GAAG,CAAtB,KAA4B,IAFA;AAAA,KAAhC;;AAIA,QAAMC,KAAK,GAAGZ,GAAG,CAACK,KAAJ,CACXQ,MADW,CACJ,UAACC,IAAD,EAAOC,CAAP;AAAA,0CACFD,IADE,IACIA,IAAI,CAACA,IAAI,CAACR,MAAL,GAAc,CAAf,CAAJ,GAAwBE,IAAI,CAACQ,cAAL,CAAoBD,CAApB,EAAsBL,cAAc,CAACK,CAAD,CAApC,CAD5B;AAAA,KADI,EAGV,CAAC,CAAD,CAHU,CAAd;AAKA,QAAME,kBAAkB,GAAGL,KAAK,CAACA,KAAK,CAACN,MAAN,GAAe,CAAhB,CAAhC;AACA,QAAMY,SAAS,GAAGjB,KAAK,CAACZ,KAAN,GAAc4B,kBAAhC;;AAEA,QAAME,IAAI,GAAG,SAAPA,IAAO,CAAAR,SAAS;AAAA,aAAIV,KAAK,CAACd,CAAN,GAAU+B,SAAS,GAAGN,KAAK,CAACD,SAAD,CAA/B;AAAA,KAAtB;;AAEA,QAAMS,UAAU,GAAG,SAAbA,UAAa,CAACvB,IAAD,EAAOwB,KAAP,EAAiB;AAClCrB,MAAAA,GAAG,CAACK,KAAJ,CAAUgB,KAAV,IAAmBxB,IAAnB;AACAI,MAAAA,KAAK,CAACqB,SAAN,CAAgBtB,GAAhB;AACD,KAHD;;AAKA,QAAMuB,SAAS,GAAG,SAAZA,SAAY,CAAC1B,IAAD,EAAMwB,KAAN;AAAA,aAAiB;AACjClC,QAAAA,CAAC,EAAEgC,IAAI,CAACE,KAAD,CAD0B;AAEjCjC,QAAAA,CAAC,EAAEc,MAF8B;AAGjCsB,QAAAA,SAAS,EAAEN,SAHsB;AAIjCX,QAAAA,YAAY,EAAEc,KAAK,KAAK,CAAV,GACVd,YADU,GAEVC,IAAI,CAACC,mBAAL,CAAyBT,GAAG,CAACK,KAAJ,CAAUgB,KAAK,GAAG,CAAlB,CAAzB,CAN6B;AAOjCD,QAAAA,UAAU,EAAVA;AAPiC,OAAjB;AAAA,KAAlB;;AAUA,WAAO3B,GAAP,qBAGMR,GAAG,CAACC,SAAJ,CAAce,KAAK,CAACd,CAApB,EAAsBe,MAAtB,EAA8BD,KAAK,CAACZ,KAApC,CAHN,EAIMW,GAAG,CAACK,KAAJ,CAAUT,GAAV,CACA,UAACC,IAAD,EAAM4B,GAAN;AAAA,aAAchC,GAAG,CAACiC,GAAJ,CAAQ7B,IAAR,CAAd,qBAA8BW,IAAI,CAACT,MAAL,CAAYF,IAAZ,EAAiB0B,SAAS,CAAC1B,IAAD,EAAM4B,GAAN,CAA1B,CAA9B;AAAA,KADA,CAJN,EAQexB,KAAK,CAACd,CARrB,EAQ6Bc,KAAK,CAACd,CARnC,EAQ2Ce,MAR3C,EAQwDyB,YAAY,CAAC,CAAD,CAAZ,GAAkB1B,KAAK,CAACb,CARhF;AAWD,GAnES;AAoEVwC,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXvB,MAAAA,KAAK,EAAE,CAACG,IAAI,CAACoB,IAAL,EAAD,EAAapB,IAAI,CAACoB,IAAL,EAAb;AADI,KAAP;AAAA;AApEI,CAAZ","file":"Bar.9ad729bf.js","sourceRoot":"..","sourcesContent":["\nconst Bar = {\n  dragBoxes: (x,y,width,mouseDrag) => {\n    // Invisible rectangles that are used to detect note dragging\n    const height = lineGap / 2;\n\n    return svg`<g class=\"drag-boxes\">\n\n      <rect x=${x} y=${y - 4 * lineGap} width=${width} height=${lineGap * 4} onmouseover=${() => mouseDrag('HA')} opacity=\"0\" />\n      <rect x=${x} y=${y + 3.5 * lineGap} width=${width} height=${lineGap * 4} onmouseover=${() => mouseDrag('G')} opacity=\"0\" />\n\n      ${[...noteHeights.entries()].map(([note,boxY]) => \n        svg`<rect\n          x=${x}\n          y=${y + lineGap * boxY - lineGap / 2}\n          width=${width}\n          height=${height}\n          onmouseover=${() => mouseDrag(note)}\n          opacity=\"0\"\n          />`)}\n    </g>`\n  },\n  render: (bar,props) => {\n    const staveY = props.y;\n\n\n    const previousWholeNote = props.previousBar ? props.previousBar.notes[props.previousBar.notes.length - 1] : null;\n    const previousNote = Note.lastNoteOfWholeNote(previousWholeNote);\n    const previousNoteOf = noteIndex => noteIndex === 0\n      ? previousNote\n      : bar.notes[noteIndex - 1] || null;\n    \n    const beats = bar.notes\n      .reduce((nums, n) =>\n        [...nums, nums[nums.length - 1] + Note.totalBeatWidth(n,previousNoteOf(n))],\n        [1]);\n    \n    const totalNumberOfBeats = beats[beats.length - 1];\n    const beatWidth = props.width / totalNumberOfBeats;\n\n    const getX = noteIndex => props.x + beatWidth * beats[noteIndex];\n\n    const updateNote = (note, index) => {\n      bar.notes[index] = note;\n      props.updateBar(bar);\n    }\n\n    const noteProps = (note,index) => ({\n      x: getX(index),\n      y: staveY,\n      noteWidth: beatWidth,\n      previousNote: index === 0\n        ? previousNote\n        : Note.lastNoteOfWholeNote(bar.notes[index - 1]),\n      updateNote\n    })\n\n    return svg`\n\n      <g class=\"bar\">\n        ${Bar.dragBoxes(props.x,staveY, props.width)}\n        ${bar.notes.map(\n          (note,idx) => svg.for(note)`${Note.render(note,noteProps(note,idx))}`\n        )}\n\n        <line x1=${props.x} x2=${props.x} y1=${staveY} y2=${lineHeightOf(4) + props.y} stroke=\"black\" />\n      </g>`;\n\n  },\n  init: () => ({\n    notes: [Note.init(),Note.init()]\n\n  })\n};"]}