{"version":3,"sources":["Note.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Note","noteAndGracenoteWidth","notes","gracenoteRatio","prevNote","map","n","i","note","gracenote","Gracenote","numberOfNotes","reduce","a","b","totalBeatWidth","previousNote","gracenoteToNoteWidthRatio","lastNoteOfWholeNote","wholeNote","length","beamFrom","x1","y1","x2","y2","length1","length2","leftIs1","leftLength","rightLength","xL","xR","yL","yR","leftTails","Math","ceil","log","rightTails","diffIsL","sharedTails","Array","keys","diffTails","splice","tailEndY","shortTailLength","svg","tailGap","noteHead","x","y","noteIndex","selected","mousedown","mouseup","noteWidth","noteHeight","rotation","clickableWidth","clickableHeight","hasDot","dotYOffset","includes","dotXOffset","dragged","draggedNote","pointerEvents","filled","rotateText","round","colour","singleton","lastNote","numberOfTails","stemX","stemY","noteOffset","gracenoteProps","gracenoteWidth","thisNote","render","noteY","selectedNotes","e","click","unclick","t","props","relativeIndexOfGracenote","index","slice","relativeIndexOf","xOf","yOf","stemXOf","cap","diff","multiple","lowestNote","last","next","multipleLowest","stemOffset","diffForLowest","stemYOf","notANote","isSingleton","shortNote","computed","init","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"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","file":"Note.df662448.js","sourceRoot":"..","sourcesContent":["/*\n\nclass Note {\n  // TODO gaps between notes still not right (e.g. set all to doublings in a bar, or have two high As after each other)\n  // todo rests - by using a note of the form { note: 'R', ... }\n  // type NoteObj = { note: Pitch, length: number, gracenote: Gracenote | null }\n  // notes: []NoteObj\n  notes = o([]);\n\n  tailGap = 5;\n  shortTailLength = 10;\n\n  draggedNote = o(null);\n  selectedNotes = o([]);\n  eventListener = null;\n\n  numberOfNotes = computed(() => this.notes().length);\n\n  // prevNote: Pitch\n  noteAndGracenoteWidth = (notes, gracenoteRatio, prevNote = null) => notes.map((n,i) => 1 + ((n.note === 'R' || n.gracenote === null)\n    ? 0\n    : gracenoteRatio * n.gracenote.numberOfNotes(n.note, i === 0 ? prevNote : notes[i - 1].note)())\n    ).reduce((a,b) => a + b,0);\n\n  totalBeatWidth = previousNote => computed(() => this.noteAndGracenoteWidth(this.notes(), gracenoteToNoteWidthRatio, previousNote));\n\n  subscribeToMouse = () => null;\n  unsubscribeToMouse = () => null;\n  mouseSubFn = null;\n\n  constructor(sub,unsub) {\n    this.subscribeToMouse = sub;\n    this.unsubscribeToMouse = unsub;\n    this.notes([{ note: 'G', length: 1, gracenote: new Gracenote() }])\n    //this.notes([{ note: 'G', length: 0.375, gracenote: new Gracenote() }, { note: 'R', length: 0.5, gracenote: new Gracenote(sub, unsub) }, { note: 'A', length: 0.125, gracenote: new Gracenote()}]);\n    //this.notes([{ note: 'R', length: 1, gracenote: null }]);\n\n\n    on('delete-selected-note', () => {\n      let notes = this.notes();\n      // has to be replaced with null then removed all at the // same way so that the later indices in selectedNotes \n      // are still valid\n      this.selectedNotes().forEach(n => notes[n] = null);\n      notes = notes.filter(n => n !== null);\n      this.notes(notes);\n      this.deselect();\n    })\n  }\n\n\n  beamFrom = (x1,y1, x2,y2, length1,length2) => {\n    // draw beams from note1 at x1,y1 to note2 x2,y2\n    // where note1 is length1 long and note2 is length2\n    const leftIs1 = computed(() => x1() < x2());\n    const leftLength = computed(() => leftIs1() ? length1 : length2);\n    const rightLength = computed(() => leftIs1() ? length2 : length1);\n    const xL = computed(() => leftIs1() ? x1() : x2());\n    const xR = computed(() => leftIs1() ? x2() : x1());\n    const yL = computed(() => leftIs1() ? y1() : y2());\n    const yR = computed(() => leftIs1() ? y2() : y1());\n    // log laws! :)\n    const leftTails = computed(() => Math.ceil(Math.log(1 / leftLength()) / Math.log(2)));\n    const rightTails = computed(() => Math.ceil(Math.log(1 / rightLength()) / Math.log(2)));\n\n\n    const diffIsL = computed(() => leftTails() > rightTails());\n\n    // tails shared by both notes\n    const sharedTails = computed(() => diffIsL() ? [...Array(rightTails()).keys()] : [...Array(leftTails()).keys()]);\n    // tails extra tails for one note\n    const diffTails = computed(() => diffIsL() ? [...Array(leftTails()).keys()].splice(rightTails()) : [...Array(rightTails()).keys()].splice(leftTails()));\n\n    const tailEndY = computed(() =>\n      diffIsL()\n      // because similar triangles\n        ? yL() + this.shortTailLength / (xR() - xL()) * (yR() - yL())\n        : yR() - this.shortTailLength / (xR() - xL()) * (yR() - yL()));\n    \n\n    return svg`<g class=\"tails\">\n      ${map(sharedTails,\n        i =>\n          svg`<line\n            x1=${xL}\n            x2=${xR}\n            y1=${computed(() => yL() - i * this.tailGap)}\n            y2=${computed(() => yR() - i * this.tailGap)}\n            stroke=\"black\"\n            stroke-width=\"2\" />`\n            )}\n      ${map(diffTails,\n        i =>\n          svg`<line\n            x1=${computed(() => diffIsL() ? xL() : xR())}\n            x2=${computed(() => diffIsL() ? xL() + this.shortTailLength : xR() - this.shortTailLength)}\n            y1=${computed(() => (diffIsL() ? yL() : yR()) - i * this.tailGap)}\n            y2=${computed(() => tailEndY() - i * this.tailGap)}\n            stroke=\"black\"\n            stroke-width=\"2\" />`\n            )}\n    </g>`;\n  }\n  setNote = (i, note) => {\n    // params: i int, note G | A | B | ...\n    // set a note to the note given\n    const newNotes = this.notes().slice();\n    if (i != null) newNotes[i] = { ...newNotes[i], note: note };\n    (i != null) ? this.notes(newNotes) : this.notes([{ note: note, length: 1, gracenote: new Gracenote() }]);\n  }\n  validNoteLengths = (notes) =>\n    notes.reduce((a,b) => { length: a.length + b.length },{ length: 0 }) === this.length;\n  \n  changeNoteLength = (i,newLength) => {\n    const newNotes = this.notes().slice();\n    const oldNote = newNotes[i];\n    newNotes[i] = { ...oldNote, length: newLength };\n\n    this.notes(newNotes);\n  }\n\n  select = (i) => {\n    if (!this.selectedNotes().includes(i)) this.selectedNotes([...this.selectedNotes(), i])\n    on('deselect-all-notes', this.deselect);\n  }\n  deselect = () => {\n    this.selectedNotes([]);\n    removeEvent('deselect-all-notes', this.deselect);\n  }\n\n  click = (i, event) => {\n    // drag note at index i in this.notes()\n    // and add event listener for dragging\n    if (!event.shiftKey) {\n      dispatchEvent('deselect-all-notes');\n      this.draggedNote(i);\n      this.mouseSubFn = n => this.setNote(i,n)\n      this.subscribeToMouse(this.mouseSubFn);\n    }\n    this.select(i);\n    document.addEventListener('mouseup', this.unclick);\n  }\n  unclick = () => {\n    // deselect note and remove event listener started\n    // by this.select(i)\n    this.draggedNote(null);\n    document.removeEventListener('mouseup', this.unclick);\n    this.unsubscribeToMouse(this.mouseSubFn);\n  }\n  noteHead = (x,y, note,selected, mousedown,mouseup) => {\n    // Draw note head, ledger line and dot\n    const noteWidth = 5;\n    const noteHeight = 4;\n    const rotation = 30;\n\n    const clickableWidth = 14;\n    const clickableHeight = 12;\n\n    const hasDot = (Math.log(note.length) / Math.log(2)) % 1 !== 0;\n    const dotYOffset = (['G','B','D','F','HA'].includes(note.note)) ? -3 : 0;\n    const dotXOffset = 10;\n    const dragged = computed(() => this.draggedNote() === this.notes().indexOf(note));\n\n\n    // pointer events must be set so that if it is being\n    // dragged, it shouldn't get pointer events because\n    // that interferes with the drag boxes (you can't\n    // drag downwards a single box)\n    const pointerEvents = computed(() => dragged() ? 'none' : 'visiblePainted');\n\n    const filled = note.length < 1.5; // shorter than a dotted crotchet\n\n    const rotateText = computed(() => \"30deg \" + Math.round(x()) + \" \" + Math.round(y()));\n\n    const colour = computed(() => selected() ? \"orange\" : \"black\");\n\n    return svg`<g class=\"note-head\">\n      <ellipse cx=${x} cy=${y} rx=\"5\" ry=\"4\" stroke=${colour} fill=${computed(() => filled ? colour : \"white\")} transform=${computed(() => `rotate(30 ${x()} ${y()})`)} pointer-events=${pointerEvents} />\n\n      ${hasDot ? svg`<circle cx=${computed(() => x() + dotXOffset)} cy=${computed(() => y() + dotYOffset)} r=\"1.5\" fill=${colour} pointer-events=\"none\" />` : null}\n\n      ${(note.note === 'HA') ? svg`<line class=\"ledger\" x1=${computed(() => x() - 8)} x2=${computed(() => x() + 8)} y1=${y} y2=${y} stroke=${colour} pointer-events=\"none\" />` : null}\n\n\n      <rect x=${computed(() => x() - clickableWidth / 2)} y=${computed(() => y() - clickableHeight / 2)} width=${clickableWidth} height=${clickableHeight} onmousedown=${mousedown} onmouseup=${mouseup} pointer-events=${pointerEvents} opacity=\"0\"/>\n    </g>`;\n  }\n\n\n  singleton = (note,lastNote, x,y, noteWidth,numberOfTails) => {\n    const stemX = computed(() => x() - 5);\n    const stemY = computed(() => noteOffset(y) + 30);\n\n    return svg`\n      ${note.gracenote === null ? null : svg`<${note.gracenote.render} x=${x} y=${y} gracenoteWidth=${computed(() => noteWidth * 0.6)} thisNote=${note.note} previousNote=${lastNote} />`}\n\n      ${this.noteHead(x, computed(() => noteY(y(), note.note)), note,computed(() => this.selectedNotes().includes(this.notes().indexOf(note))), e => this.click(0, e), this.unclick)}\n      ${(note.length > 3) ? null : svg`<line\n        x1=${stemX}\n        x2=${stemX}\n        y1=${y}\n        y2=${stemY}\n        stroke=\"black\"\n        />`}\n      ${numberOfTails > 0 ? svg`<g class=\"tails\">\n        ${[...Array(numberOfTails).keys()].map(t => svg`<line x1=${stemX} x2=${computed(() => stemX() + 10)} y1=${computed(() => stemY() - 5 * t)} y2=${computed(() => stemY() - 5 * t - 10)} stroke=\"black\" />`)}\n      </g>` : null}\n    `;\n  }\n\n  render = (props) => {\n    // render self\n\n    // takes a note and returns not the actual index, but the index including\n    // gracenoteToNoteWidthRatio * all the gracenotes up to it\n    // useful for x calculations\n\n    const lastNote = computed(() => props.previousNote() ? props.previousNote() : null);\n    const relativeIndexOfGracenote = note => computed(() => this.noteAndGracenoteWidth(this.notes().slice().splice(0,this.notes().indexOf(note)), gracenoteToNoteWidthRatio, lastNote()));\n    const relativeIndexOf = note => computed(() => relativeIndexOfGracenote(note)() + gracenoteToNoteWidthRatio * (note.gracenote === null ? 0 : note.gracenote.numberOfNotes(note.note, this.notes().indexOf(note) === 0 ? lastNote() : this.notes()[this.notes().indexOf(note) - 1].note)()));\n    const xOf = note => computed(() => props.x() + relativeIndexOf(note)() * props.noteWidth());\n    const yOf = note => computed(() => noteY(props.y(), note.note));\n\n    const stemXOf = note => computed(() => xOf(note)() - 5);\n\n    return svg`<g class=\"note\">\n      ${computed(() => {\n        if (this.numberOfNotes() === 1 && this.notes()[0].note === 'R') {\n          return svg`<g class=\"rest\">\n            <circle cx=${props.x} cy=${props.y} r=\"10\" fill=\"red\" />\n          </g>`\n\n        } else if (this.numberOfNotes() === 1) {\n          const note = this.notes()[0];\n          const numberOfTails = Math.ceil(-1 * Math.log(note.length) / Math.log(2));\n          return this.singleton(note,lastNote(),props.x,props.y,props.noteWidth(),numberOfTails);\n\n/*\n      return svg`\n        ${note.gracenote === null ? null : svg`<${note.gracenote.render} x=${computed(() => props.x() + props.noteWidth() * relativeIndexOfGracenote(note)())} y=${props.y} gracenoteWidth=${computed(() => props.noteWidth() * 0.6)} thisNote=${computed(() => this.notes()[0].note)} previousNote=${lastNote} />`}\n\n        ${this.noteHead(xOf(note), computed(() => noteY(props.y(), note.note)), note,computed(() => this.selectedNotes().includes(this.notes().indexOf(note))), e => this.click(0, e), this.unclick)}\n        ${(note.length > 3) ? null : svg`<line\n          x1=${stemXOf(note)}\n          x2=${stemXOf(note)}\n          y1=${yOf(note)}\n          y2=${stemYOf(note)}\n          stroke=\"black\"\n          />`}\n        ${numberOfTails > 0 ? svg`<g class=\"tails\">\n          ${[...Array(numberOfTails).keys()].map(t => svg`<line x1=${stemXOf(note)} x2=${computed(() => stemXOf(note)() + 10)} y1=${computed(() => stemYOf(note)() - 5 * t)} y2=${computed(() => stemYOf(note)() - 5 * t - 10)} stroke=\"black\" />`)}\n        </g>` : null}\n      `;\n      * /\n\n        } else {\n          const cap = (n, cap) =>\n            (n > cap) ? cap :\n            (n < -cap) ? -cap :\n            n;\n\n          const diff = computed(() => cap(\n            // todo cap should be dependent on how many notes are in the group\n            // difference between first and last notes in a group\n            noteOffset(this.notes()[this.notes().length - 1].note)\n            - noteOffset(this.notes()[0].note\n            ), 10));\n          \n          const multipleLowest = o(false);\n\n          const lowestNote = computed(() => {\n            let multiple = false;\n            let lowestNote = this.notes().reduce((last,next) => {\n              if (noteOffset(next.note) === noteOffset(last.note)) {\n                multiple = true;\n                return last;\n              } else if (noteOffset(next.note) > noteOffset(last.note)) {\n                multiple = false;\n                return next;\n              } else {\n                return last;\n              }\n            });\n            if (multiple) {\n              multipleLowest(true);\n            }\n            return lowestNote;\n          });\n\n          const stemOffset = note => computed(() => {\n            return (noteOffset(lowestNote().note) - noteOffset(note.note));\n          });\n\n          const diffForLowest = computed(() => 30 + noteOffset(lowestNote().note) - (multipleLowest ? 0 : diff() * relativeIndexOf(lowestNote())() / this.totalBeatWidth(props.previousNote())()));\n\n          const stemYOf = note => computed(() => {\n            return props.y()\n              + (multipleLowest()\n                // straight line if there is more than one lowest note\n                ? 0\n                // otherwise use a slant\n                : diff() * relativeIndexOf(note)() / this.totalBeatWidth(props.previousNote())())\n              // offset so that the lowest note is always a constant height\n              + diffForLowest();\n          });\n          // Intentional double equals (array out of bounds)\n          const notANote = note => note == null || note.note === 'R';\n\n          const isSingleton = note => computed(() => !(notANote(this.notes()[this.notes().indexOf(note) - 1]) || notANote(this.notes()[this.notes().indexOf(note) + 1])));\n\n\n          return svg`\n            <g class=\"grouped-notes\">\n              ${map(\n                this.notes,\n                note => {\n                  let previousNote = computed(() => this.notes()[this.notes().indexOf(note) - 1]);\n\n                  return svg`<g class=\"grouped-note\">\n                      ${note.gracenote === null ? null : svg`<${note.gracenote.render} x=${computed(() => props.x() + props.noteWidth() * relativeIndexOfGracenote(note)())} y=${props.y} gracenoteWidth=${computed(() => props.noteWidth() * 0.6)} thisNote=${computed(() => this.notes()[this.notes().indexOf(note)].note)} previousNote=${this.notes()[this.notes().indexOf(note) - 1] ? o(this.notes()[this.notes().indexOf(note) - 1].note) : lastNote} />`}\n\n                      ${computed(() => this.noteHead(xOf(note), yOf(note), note,computed(() => this.selectedNotes().includes(this.notes().indexOf(note))), e => this.click(this.notes().indexOf(note),  e), this.unclick))}\n\n                      ${\n                        computed(() => previousNote() ? this.beamFrom(stemXOf(note),stemYOf(note), stemXOf(previousNote()),stemYOf(previousNote()), note.length, previousNote().length) : null)\n                      }\n\n                      <line\n                        x1=${stemXOf(note)}\n                        x2=${stemXOf(note)}\n                        y1=${yOf(note)}\n                        y2=${stemYOf(note)}\n                        stroke=\"black\"\n                        />\n                    </g>`\n                }\n              )}\n            </g>`;\n        }\n      })}\n    </g>`;\n\n  }\n}\n*/\n\nconst Note = {\n  noteAndGracenoteWidth: (notes, gracenoteRatio, prevNote=null) =>\n    notes.map((n,i) => 1 +\n      (n.note === 'R' || n.gracenote === null)\n        ? 0\n        : gracenoteRatio * Gracenote.numberOfNotes(n.gracenote, n.note, i === 0 ? prevNote : notes[i - 1].note)\n    ).reduce((a,b) => a + b),\n    \n  totalBeatWidth: (note,previousNote) => Note.noteAndGracenoteWidth(note.notes, gracenoteToNoteWidthRatio, previousNote),\n\n  lastNoteOfWholeNote: wholeNote => wholeNote ? wholeNote.notes[wholeNote.notes.length - 1].note : null,\n\n  numberOfNotes: note => note.notes.length,\n  beamFrom: (x1,y1, x2,y2, length1,length2) => {\n    // draw beams from note1 at x1,y1 to note2 x2,y2\n    // where note1 is length1 long and note2 is length2\n    const leftIs1 = x1 < x2;\n    const leftLength = leftIs1 ? length1 : length2;\n    const rightLength = leftIs1 ? length2 : length1;\n    const xL = leftIs1 ? x1 : x2;\n    const xR = leftIs1 ? x2 : x1;\n    const yL = leftIs1 ? y1 : y2;\n    const yR = leftIs1 ? y2 : y1;\n    // log laws! :)\n    const leftTails = Math.ceil(Math.log(1 / leftLength) / Math.log(2));\n    const rightTails = Math.ceil(Math.log(1 / rightLength) / Math.log(2));\n\n\n    const diffIsL = leftTails > rightTails;\n\n    // tails shared by both notes\n    const sharedTails = diffIsL ? [...Array(rightTails).keys()] : [...Array(leftTails).keys()];\n    // tails extra tails for one note\n    const diffTails = diffIsL ? [...Array(leftTails).keys()].splice(rightTails) : [...Array(rightTails).keys()].splice(leftTails);\n\n    const tailEndY =\n      diffIsL\n      // because similar triangles\n        ? yL + this.shortTailLength / (xR - xL) * (yR - yL)\n        : yR - this.shortTailLength / (xR - xL) * (yR - yL);\n    \n\n    return svg`<g class=\"tails\">\n      ${sharedTails.map(\n        i =>\n          svg`<line\n            x1=${xL}\n            x2=${xR}\n            y1=${yL - i * this.tailGap}\n            y2=${yR - i * this.tailGap}\n            stroke=\"black\"\n            stroke-width=\"2\" />`\n            )}\n      ${diffTails.map(\n        i =>\n          svg`<line\n            x1=${diffIsL ? xL : xR}\n            x2=${diffIsL ? xL + this.shortTailLength : xR - this.shortTailLength}\n            y1=${(diffIsL ? yL : yR) - i * this.tailGap}\n            y2=${tailEndY - i * this.tailGap}\n            stroke=\"black\"\n            stroke-width=\"2\" />`\n            )}\n    </g>`;\n  },\n  \n  noteHead: (x,y, note,noteIndex,selected, mousedown,mouseup) => {\n    // Draw note head, ledger line and dot\n    const noteWidth = 5;\n    const noteHeight = 4;\n    const rotation = 30;\n\n    const clickableWidth = 14;\n    const clickableHeight = 12;\n\n    const hasDot = (Math.log(note.length) / Math.log(2)) % 1 !== 0;\n    const dotYOffset = (['G','B','D','F','HA'].includes(note.note)) ? -3 : 0;\n    const dotXOffset = 10;\n    const dragged = this.draggedNote === noteIndex;\n\n\n    // pointer events must be set so that if it is being\n    // dragged, it shouldn't get pointer events because\n    // that interferes with the drag boxes (you can't\n    // drag downwards a single box)\n    const pointerEvents = dragged ? 'none' : 'visiblePainted';\n\n    const filled = note.length < 1.5; // shorter than a dotted crotchet\n\n    const rotateText = \"30deg \" + Math.round(x) + \" \" + Math.round(y);\n\n    const colour = selected ? \"orange\" : \"black\";\n\n    return svg`<g class=\"note-head\">\n      <ellipse cx=${x} cy=${y} rx=\"5\" ry=\"4\" stroke=${colour} fill=${filled ? colour : \"white\"} transform=${`rotate(30 ${x} ${y})`} pointer-events=${pointerEvents} />\n\n      ${hasDot ? svg`<circle cx=${x + dotXOffset} cy=${y + dotYOffset} r=\"1.5\" fill=${colour} pointer-events=\"none\" />` : null}\n\n      ${(note.note === 'HA') ? svg`<line class=\"ledger\" x1=${x - 8} x2=${x + 8} y1=${y} y2=${y} stroke=${colour} pointer-events=\"none\" />` : null}\n\n\n      <rect x=${x - clickableWidth / 2} y=${y - clickableHeight / 2} width=${clickableWidth} height=${clickableHeight} onmousedown=${mousedown} onmouseup=${mouseup} pointer-events=${pointerEvents} opacity=\"0\"/>\n    </g>`;\n  },\n  singleton: (note,noteIndex,lastNote, x,y, noteWidth,numberOfTails) => {\n    const stemX = x - 5;\n    const stemY = noteOffset(y) + 30;\n\n    const gracenoteProps = ({\n      x: x,\n      y: y,\n      gracenoteWidth: noteWidth * 0.6,\n      thisNote: note.note,\n      previousNote: lastNote\n    })\n\n    return svg`\n      ${note.gracenote === null ? null : Gracenote.render(note.gracenote, gracenoteProps)}\n\n      ${this.noteHead(x, noteY(y, note.note), note,this.selectedNotes.includes(noteIndex), e => this.click(0, e), this.unclick)}\n      ${(note.length > 3) ? null : svg`<line\n        x1=${stemX}\n        x2=${stemX}\n        y1=${y}\n        y2=${stemY}\n        stroke=\"black\"\n        />`}\n      ${numberOfTails > 0 ? svg`<g class=\"tails\">\n        ${[...Array(numberOfTails).keys()].map(t => svg`<line x1=${stemX} x2=${stemX + 10} y1=${stemY - 5 * t} y2=${stemY - 5 * t - 10} stroke=\"black\" />`)}\n      </g>` : null}\n    `;\n  },\n\n  render: (note,props) => {\n\n    // takes a note and returns not the actual index, but the index including\n    // gracenoteToNoteWidthRatio * all the gracenotes up to it\n    // useful for x calculations\n\n    const lastNote = props.previousNote || null;\n    const relativeIndexOfGracenote = (note,index) => Note.noteAndGracenoteWidth(note.notes.slice().splice(0,index), gracenoteToNoteWidthRatio, lastNote);\n    const relativeIndexOf = (note,index) => relativeIndexOfGracenote(note,index) + gracenoteToNoteWidthRatio * (note.gracenote === null ? 0 : note.gracenote.numberOfNotes(note.note, index === 0 ? lastNote : note.notes[index - 1].note));\n    const xOf = (note,noteIndex) => props.x + relativeIndexOf(note,noteIndex) * props.noteWidth;\n    const yOf = note => noteY(props.y, note.note);\n\n    const stemXOf = note => xOf(note) - 5;\n\n    if (Note.numberOfNotes(note) === 1 && note.notes[0].note === 'R') {\n          \n      return svg`<g class=\"rest\">\n        <circle cx=${props.x} cy=${props.y} r=\"10\" fill=\"red\" />\n      </g>`;\n\n    } else if (this.numberOfNotes === 1) {\n      const note = note.notes[0];\n      const numberOfTails = Math.ceil(-1 * Math.log(note.length) / Math.log(2));\n      return Note.singleton(note,0,lastNote,props.x,props.y,props.noteWidth,numberOfTails);\n    } else {\n      const cap = (n, cap) =>\n        (n > cap) ? cap :\n        (n < -cap) ? -cap :\n        n;\n\n      const diff = cap(\n        // todo cap should be dependent on how many notes are in the group\n        // difference between first and last notes in a group\n        noteOffset(note.notes[note.notes.length - 1].note)\n        - noteOffset(note.notes[0].note),\n        10);\n      \n\n      let multiple = false;\n      const lowestNote = note.notes.reduce((last,next) => {\n        if (noteOffset(next.note) === noteOffset(last.note)) {\n          multiple = true;\n          return last;\n        } else if (noteOffset(next.note) > noteOffset(last.note)) {\n          multiple = false;\n          return next;\n        } else {\n          return last;\n        }\n      });\n      const multipleLowest = multiple;\n\n      const stemOffset = note => \n        noteOffset(lowestNote.note) - noteOffset(note.note);\n\n      const diffForLowest = 30 + noteOffset(lowestNote.note) - (multipleLowest ? 0 : diff * relativeIndexOf(lowestNote) / Note.totalBeatWidth(note,props.previousNote));\n\n      const stemYOf = note => \n        props.y()\n          + (multipleLowest()\n            // straight line if there is more than one lowest note\n            ? 0\n            // otherwise use a slant\n            : diff * relativeIndexOf(note) / Note.totalBeatWidth(note,props.previousNote))\n          // offset so that the lowest note is always a constant height\n          + diffForLowest;\n      // Intentional double equals (array out of bounds)\n      const notANote = note => note == null || note.note === 'R';\n\n      const isSingleton = (note,index) => !(notANote(note.notes[index - 1]) || notANote(note.notes[index + 1]));\n\n\n      return svg`\n        <g class=\"grouped-notes\">\n          ${note.notes.map(\n            // todo replace all note with shortNote\n            (shortNote,index) => {\n              let previousNote = note.notes[index - 1];\n\n              const gracenoteProps = ({\n                x: props.x + props.noteWidth * relativeIndexOfGracenote(shortNote),\n                y: props.y,\n                gracenoteWidth: props.noteWidth * 0.6,\n                thisNote: shortNote.note,\n                previousNote: previousNote ? previousNote.note : lastNote\n              })\n\n              return svg`<g class=\"grouped-note\">\n                  ${shortNote.gracenote === null ? null : Gracenote.render(shortNote.gracenote,gracenoteProps)}\n\n                  ${/*todo*/Note.noteHead(xOf(shortNote), yOf(shortNote), shortNote,props.selectedNotes.includes(index), e => Note.click(index, e), Note.unclick)}\n\n                  ${\n                    computed(() => previousNote() ? this.beamFrom(stemXOf(shortNote),stemYOf(shortNote), stemXOf(previousNote()),stemYOf(previousNote()), shortNote.length, previousNote().length) : null)\n                  }\n\n                  <line\n                    x1=${stemXOf(shortNote)}\n                    x2=${stemXOf(shortNote)}\n                    y1=${yOf(shortNote)}\n                    y2=${stemYOf(shortNote)}\n                    stroke=\"black\"\n                    />\n                </g>`\n            }\n          )}\n        </g>`;\n    }\n\n  },\n\n  init: () => ({\n    notes: [{note: 'A'}]\n  })\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}